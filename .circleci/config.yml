version: 2.1
jobs:
    build:
        docker:
            - image: python:3.7.3-stretch

        working_directory: ~/repo

        steps:
            - checkout
            # Download and cache dependencies
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "requirements.txt" }}
                    # fallback to using the latest cache if no exact match is found
                    - v1-dependencies-
            
            - run:
                name: install dependencies
                command: |
                    python3 -m venv venv
                    . venv/bin/activate
                    make install
                    # Install hadolint
                    wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                    chmod +x /bin/hadolint
                    
            - save_cache:
                paths: [./venv]
                key: v1-dependencies-{{ checksum "requirements.txt" }}
                
            # run lint!
            - run:
                name: run lint
                command: |
                    . venv/bin/activate
                    make lint
                
            - run:
                name: run tests
                command: |
                    . venv/bin/activate
                    make test
    
    create_image:
        docker:
            - image: cimg/aws:2022.06
        
        working_directory: ~/repo

        steps:
            - checkout
            - setup_remote_docker:
                version: 20.10.14
                
            - run:
                name: build docker image
                command: |
                    docker build --tag=capstoneproj .
                    docker image ls
            
            - run:
                name: upload to ECR
                command: |
                    aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 237863785462.dkr.ecr.us-east-1.amazonaws.com
                    docker tag capstoneproj:latest 237863785462.dkr.ecr.us-east-1.amazonaws.com/capstoneproj:latest
                    docker push 237863785462.dkr.ecr.us-east-1.amazonaws.com/capstoneproj:latest
        
    deploy_app:   
        docker:
            - image: cimg/aws:2022.06
        
        working_directory: ~/repo

        steps:
            - checkout
            
            - run:
                name: install kubectl
                command: |
                    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
                    sudo install -m 0755 kubectl /usr/bin/kubectl
                    kubectl version --client
                    
            - run:
                name: update kube config
                command: |
                    mkdir ~/.kube
                    touch ~/.kube/config
                    aws eks --region us-east-1 update-kubeconfig --name capstoneProj
            
            - run:
                name: deploy the app 
                command: |
                    kubectl get nodes
                    kubectl apply -f ~/repo/deployment.yaml
                    kubectl get deployments
            
            - run:
                name: deploy service
                command: |
                    kubectl apply -f ~/repo/service.yaml
                    kubectl get svc
    smoke_test:
        docker:
            - image: cimg/aws:2022.06
        
        working_directory: ~/repo

        steps:
            - checkout
            - run:
                name: install kubectl
                command: |
                    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
                    sudo install -m 0755 kubectl /usr/bin/kubectl
                    aws eks --region us-east-1 update-kubeconfig --name capstoneProj
            - run:
                name: test the url
                command: |
                    export url="kubectl get svc capstoneprojR1 | awk 'NR==2 {print $4}'"
                    curl -v ${url}:8080
                    
                    
    switch_to_green:
        docker:
            - image: cimg/aws:2022.06
        
        working_directory: ~/repo

        steps:
            - checkout
            - run:
                name: install kubectl
                command: |
                    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
                    sudo install -m 0755 kubectl /usr/bin/kubectl
                    aws eks --region us-east-1 update-kubeconfig --name capstoneProj
            - run:
                name: switch to green env
                command: |
                    kubectl delete deployment capstoneproj
                    kubectl get deployments
                    kubectl delete svc capstoneproj
                    kubectl get svc
                    kubectl apply -f ./deploymentGreen.yml
                    kubectl get deployments
                    kubectl apply -f ./serviceGreen.yml

workflows:
    default:
        jobs:
            - build
            - create_image:
                requires: [build]
            - deploy_app:
                requires: [create_image]
            - smoke_test:
                requires: [deploy_app]
            - switch_to_green:
                requires: [deploy_app, smoke_test]
